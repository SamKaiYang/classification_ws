// Generated by gencpp from file ROS_Socket/grip_mode.msg
// DO NOT EDIT!


#ifndef ROS_SOCKET_MESSAGE_GRIP_MODE_H
#define ROS_SOCKET_MESSAGE_GRIP_MODE_H

#include <ros/service_traits.h>


#include <ROS_Socket/grip_modeRequest.h>
#include <ROS_Socket/grip_modeResponse.h>


namespace ROS_Socket
{

struct grip_mode
{

typedef grip_modeRequest Request;
typedef grip_modeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct grip_mode
} // namespace ROS_Socket


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ROS_Socket::grip_mode > {
  static const char* value()
  {
    return "d92a2d9da83c00d7d8de417445c123ec";
  }

  static const char* value(const ::ROS_Socket::grip_mode&) { return value(); }
};

template<>
struct DataType< ::ROS_Socket::grip_mode > {
  static const char* value()
  {
    return "ROS_Socket/grip_mode";
  }

  static const char* value(const ::ROS_Socket::grip_mode&) { return value(); }
};


// service_traits::MD5Sum< ::ROS_Socket::grip_modeRequest> should match
// service_traits::MD5Sum< ::ROS_Socket::grip_mode >
template<>
struct MD5Sum< ::ROS_Socket::grip_modeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ROS_Socket::grip_mode >::value();
  }
  static const char* value(const ::ROS_Socket::grip_modeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ROS_Socket::grip_modeRequest> should match
// service_traits::DataType< ::ROS_Socket::grip_mode >
template<>
struct DataType< ::ROS_Socket::grip_modeRequest>
{
  static const char* value()
  {
    return DataType< ::ROS_Socket::grip_mode >::value();
  }
  static const char* value(const ::ROS_Socket::grip_modeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ROS_Socket::grip_modeResponse> should match
// service_traits::MD5Sum< ::ROS_Socket::grip_mode >
template<>
struct MD5Sum< ::ROS_Socket::grip_modeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ROS_Socket::grip_mode >::value();
  }
  static const char* value(const ::ROS_Socket::grip_modeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ROS_Socket::grip_modeResponse> should match
// service_traits::DataType< ::ROS_Socket::grip_mode >
template<>
struct DataType< ::ROS_Socket::grip_modeResponse>
{
  static const char* value()
  {
    return DataType< ::ROS_Socket::grip_mode >::value();
  }
  static const char* value(const ::ROS_Socket::grip_modeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROS_SOCKET_MESSAGE_GRIP_MODE_H
