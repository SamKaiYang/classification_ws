// Generated by gencpp from file ROS_Socket/speed_mode.msg
// DO NOT EDIT!


#ifndef ROS_SOCKET_MESSAGE_SPEED_MODE_H
#define ROS_SOCKET_MESSAGE_SPEED_MODE_H

#include <ros/service_traits.h>


#include <ROS_Socket/speed_modeRequest.h>
#include <ROS_Socket/speed_modeResponse.h>


namespace ROS_Socket
{

struct speed_mode
{

typedef speed_modeRequest Request;
typedef speed_modeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct speed_mode
} // namespace ROS_Socket


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ROS_Socket::speed_mode > {
  static const char* value()
  {
    return "71efcf49fabc95bebfd108417405a10f";
  }

  static const char* value(const ::ROS_Socket::speed_mode&) { return value(); }
};

template<>
struct DataType< ::ROS_Socket::speed_mode > {
  static const char* value()
  {
    return "ROS_Socket/speed_mode";
  }

  static const char* value(const ::ROS_Socket::speed_mode&) { return value(); }
};


// service_traits::MD5Sum< ::ROS_Socket::speed_modeRequest> should match
// service_traits::MD5Sum< ::ROS_Socket::speed_mode >
template<>
struct MD5Sum< ::ROS_Socket::speed_modeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ROS_Socket::speed_mode >::value();
  }
  static const char* value(const ::ROS_Socket::speed_modeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ROS_Socket::speed_modeRequest> should match
// service_traits::DataType< ::ROS_Socket::speed_mode >
template<>
struct DataType< ::ROS_Socket::speed_modeRequest>
{
  static const char* value()
  {
    return DataType< ::ROS_Socket::speed_mode >::value();
  }
  static const char* value(const ::ROS_Socket::speed_modeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ROS_Socket::speed_modeResponse> should match
// service_traits::MD5Sum< ::ROS_Socket::speed_mode >
template<>
struct MD5Sum< ::ROS_Socket::speed_modeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ROS_Socket::speed_mode >::value();
  }
  static const char* value(const ::ROS_Socket::speed_modeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ROS_Socket::speed_modeResponse> should match
// service_traits::DataType< ::ROS_Socket::speed_mode >
template<>
struct DataType< ::ROS_Socket::speed_modeResponse>
{
  static const char* value()
  {
    return DataType< ::ROS_Socket::speed_mode >::value();
  }
  static const char* value(const ::ROS_Socket::speed_modeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROS_SOCKET_MESSAGE_SPEED_MODE_H
