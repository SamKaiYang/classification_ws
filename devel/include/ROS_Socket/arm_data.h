// Generated by gencpp from file ROS_Socket/arm_data.msg
// DO NOT EDIT!


#ifndef ROS_SOCKET_MESSAGE_ARM_DATA_H
#define ROS_SOCKET_MESSAGE_ARM_DATA_H

#include <ros/service_traits.h>


#include <ROS_Socket/arm_dataRequest.h>
#include <ROS_Socket/arm_dataResponse.h>


namespace ROS_Socket
{

struct arm_data
{

typedef arm_dataRequest Request;
typedef arm_dataResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct arm_data
} // namespace ROS_Socket


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ROS_Socket::arm_data > {
  static const char* value()
  {
    return "3bf33ada770441905ffbefcb06a48c2e";
  }

  static const char* value(const ::ROS_Socket::arm_data&) { return value(); }
};

template<>
struct DataType< ::ROS_Socket::arm_data > {
  static const char* value()
  {
    return "ROS_Socket/arm_data";
  }

  static const char* value(const ::ROS_Socket::arm_data&) { return value(); }
};


// service_traits::MD5Sum< ::ROS_Socket::arm_dataRequest> should match
// service_traits::MD5Sum< ::ROS_Socket::arm_data >
template<>
struct MD5Sum< ::ROS_Socket::arm_dataRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ROS_Socket::arm_data >::value();
  }
  static const char* value(const ::ROS_Socket::arm_dataRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ROS_Socket::arm_dataRequest> should match
// service_traits::DataType< ::ROS_Socket::arm_data >
template<>
struct DataType< ::ROS_Socket::arm_dataRequest>
{
  static const char* value()
  {
    return DataType< ::ROS_Socket::arm_data >::value();
  }
  static const char* value(const ::ROS_Socket::arm_dataRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ROS_Socket::arm_dataResponse> should match
// service_traits::MD5Sum< ::ROS_Socket::arm_data >
template<>
struct MD5Sum< ::ROS_Socket::arm_dataResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ROS_Socket::arm_data >::value();
  }
  static const char* value(const ::ROS_Socket::arm_dataResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ROS_Socket::arm_dataResponse> should match
// service_traits::DataType< ::ROS_Socket::arm_data >
template<>
struct DataType< ::ROS_Socket::arm_dataResponse>
{
  static const char* value()
  {
    return DataType< ::ROS_Socket::arm_data >::value();
  }
  static const char* value(const ::ROS_Socket::arm_dataResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROS_SOCKET_MESSAGE_ARM_DATA_H
